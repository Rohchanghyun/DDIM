INFO - main.py - 2024-06-20 05:15:41,617 - Using device: cuda:1
INFO - main.py - 2024-06-20 05:15:41,618 - Writing log file to market_ddim/logs/market
INFO - main.py - 2024-06-20 05:15:41,618 - Exp instance id = 64322
INFO - main.py - 2024-06-20 05:15:41,618 - Exp comment = 
ERROR - main.py - 2024-06-20 05:15:44,725 - Traceback (most recent call last):
  File "/workspace/ddim/main.py", line 242, in main
    runner.train()
  File "/workspace/ddim/runners/diffusion.py", line 154, in train
    loss = loss_registry[config.model.type](model, x, t, e, b)
  File "/workspace/ddim/functions/losses.py", line 11, in noise_estimation_loss
    output = model(x, t.float())
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/workspace/ddim/models/diffusion.py", line 330, in forward
    h = self.up[i_level].block[i_block](
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/workspace/ddim/models/diffusion.py", line 126, in forward
    h = self.dropout(h)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/modules/dropout.py", line 59, in forward
    return F.dropout(input, self.p, self.training, self.inplace)
  File "/opt/conda/lib/python3.10/site-packages/torch/nn/functional.py", line 1268, in dropout
    return _VF.dropout_(input, p, training) if inplace else _VF.dropout(input, p, training)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 256.00 MiB. GPU 1 has a total capacity of 23.69 GiB of which 201.38 MiB is free. Process 2235612 has 23.34 GiB memory in use. Of the allocated memory 22.32 GiB is allocated by PyTorch, and 724.66 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)

